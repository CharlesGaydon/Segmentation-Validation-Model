name: CICD

on:
  # Run CICD for non-draft pull request
  pull_request:
    branches:
      - dev
      - main
  # Also run when the pull request merges (which generates a push)
  # So that we can tag the docker image appropriately.
  push:
    branches:
      - dev
      - prod
      - main

jobs:
  build_test_deploy:
    runs-on: self-hosted

    steps:

    - name: Checkout branch       
      uses: actions/checkout@v2

    - name: build docker image       
      run: docker build -t lidar_prod .

    - name: Check code neatness (linter)
      run: docker run lidar_prod flake8

    - name: Run tests & get coverage - fast ones go first.
      run: >
        docker run
        lidar_prod
        python -m
        pytest -rA -v -m "not slow" --ignore=actions-runner

    - name: Run slow tests last (evaluation on large file)
      run: >
        docker run
        -v /var/data/cicd/CICD_github_assets/lidar_prod/inputs/evaluation/:/lidar-prod-quality-control/tests/files/large/
        lidar_prod
        python -m
        pytest -rA -v -m "slow" --ignore=actions-runner --no-cov

    - name: Test run from CLI on a LAS subset.
      run: >
        docker run 
        -v /var/data/cicd/CICD_github_assets/lidar_prod/inputs/:/inputs/
        -v /var/data/cicd/CICD_github_assets/lidar_prod/outputs/:/outputs/
        lidar_prod
        python 
        lidar_prod/run_app.py
        print_config=true
        paths.src_las=/inputs/730000_6360000.subset.prototype_format202.las
        paths.output_dir=/outputs/

    # Everything ran so we tag the valid docker image to keep it
    # This happens for push events, which are in particular 
    # triggered when a pull request is merged.
    - name: Get the branch name into an environment variable.
      if: github.event_name == 'push'
      uses: nelonoel/branch-name@v1.0.1

    - name: Print the branch name
      if: github.event_name == 'push'
      run: echo ${BRANCH_NAME}

    - name: Tag the docker image with branch name
      if: github.event_name == 'push'
      run: docker tag lidar_prod:latest lidar_prod:${BRANCH_NAME}

    - name: Dry run image so that is it not prunned
      if: github.event_name == 'push'
      run: docker run lidar_prod:${BRANCH_NAME} bash

    # This needs writing rights to the mounted path
    - name: save the docker image because everything worked
      if: github.event_name == 'push'
      run: docker save lidar_prod:${BRANCH_NAME} -o /var/data/cicd/CICD_github_assets/CICD_docker_images/lidar_prod_${BRANCH_NAME}.tar

    - name: Clean dangling docker images
      if: always()  # always do it, even if something failed
      run: docker system prune --force # remove dangling docker images, without asking user for confirmation


      
